#include "ArlineImgui.hpp"
#include "ArlineWindow.hpp"
#include <backends/imgui_impl_glfw.h>

auto arline::ImGuiContext::Create() noexcept -> v0
{
    ImGui::CreateContext();
    ImGui_ImplGlfw_InitForVulkan(Window::GetHandle(), true);

    auto fontData{ static_cast<u8*>(nullptr) };
    auto texWidth{ i32{} }, texHeight{ i32{} };
    ImGui::GetIO().Fonts->GetTexDataAsRGBA32(&fontData, &texWidth, &texHeight);

    m.fontTexture = Texture2D{ fontData, static_cast<u32>(texWidth), static_cast<u32>(texHeight) };
    m.vbo = DynamicBuffer{ 1024 * 128 * sizeof(ImDrawVert) };
    m.ibo = DynamicBuffer{ 1024 * 128 * sizeof(ImDrawIdx) };
    CreatePipeline();
}

auto arline::ImGuiContext::Teardown() noexcept -> v0
{
    m = {};

    ImGui_ImplGlfw_Shutdown();
    ImGui::DestroyContext();
}

auto arline::ImGuiContext::NewFrame() noexcept -> v0
{
    ImGui_ImplGlfw_NewFrame();
    ImGui::NewFrame();
}

auto arline::ImGuiContext::EndFrame() noexcept -> v0
{
    ImGui::EndFrame();
}

auto arline::ImGuiContext::CreatePipeline() noexcept -> v0
{
    /*
        #version 460
        #extension GL_EXT_buffer_reference : require
        #extension GL_EXT_shader_16bit_storage : require

        layout(location = 0) out vec4 outColor;
        layout(location = 1) out vec2 outUV;
        layout(location = 2) out flat uint outTextureId;

        layout(constant_id = 0) const float scaleX = 0.0;
        layout(constant_id = 1) const float scaleY = 0.0;

        struct Vertex
        {
            float x, y, u, v;
            uint color;
        };

        layout(buffer_reference) restrict readonly buffer VertexBuffer
        {
            Vertex data[];
        };

        layout(buffer_reference) restrict readonly buffer IndexBuffer
        {
            uint16_t data[];
        };

        layout(push_constant) uniform PushConstant
        {
            VertexBuffer vbo;
            IndexBuffer ibo;
            uint textureId;
        };

        void main()
        {
            Vertex v = vbo.data[uint(ibo.data[gl_VertexIndex]) + gl_BaseInstance];

            gl_Position = vec4(v.x * scaleX - 1.0, v.y * scaleY + 1.0, 0, 1);
            outColor = unpackUnorm4x8(v.color);
            outUV = vec2(v.u, v.v);
            outTextureId = textureId;
        }
    */

    u32 constexpr vertCode[] = {
        0x07230203,0x00010000,0x0008000b,0x00000062,0x00000000,0x00020011,0x00000001,0x00020011,
        0x0000114b,0x00020011,0x00001151,0x00020011,0x000014e3,0x0007000a,0x5f565053,0x5f52484b,
        0x69623631,0x74735f74,0x6761726f,0x00000065,0x0009000a,0x5f565053,0x5f52484b,0x73796870,
        0x6c616369,0x6f74735f,0x65676172,0x6675625f,0x00726566,0x0009000a,0x5f565053,0x5f52484b,
        0x64616873,0x645f7265,0x5f776172,0x61726170,0x6574656d,0x00007372,0x0006000b,0x00000001,
        0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,0x000014e4,0x00000001,0x000b000f,
        0x00000000,0x00000004,0x6e69616d,0x00000000,0x00000020,0x00000026,0x00000041,0x00000051,
        0x00000057,0x0000005e,0x00030003,0x00000002,0x000001cc,0x00070004,0x455f4c47,0x625f5458,
        0x65666675,0x65725f72,0x65726566,0x0065636e,0x00080004,0x455f4c47,0x735f5458,0x65646168,
        0x36315f72,0x5f746962,0x726f7473,0x00656761,0x00040005,0x00000004,0x6e69616d,0x00000000,
        0x00040005,0x00000008,0x74726556,0x00007865,0x00040006,0x00000008,0x00000000,0x00000078,
        0x00040006,0x00000008,0x00000001,0x00000079,0x00040006,0x00000008,0x00000002,0x00000075,
        0x00040006,0x00000008,0x00000003,0x00000076,0x00050006,0x00000008,0x00000004,0x6f6c6f63,
        0x00000072,0x00030005,0x0000000a,0x00000076,0x00060005,0x0000000d,0x68737550,0x736e6f43,
        0x746e6174,0x00000000,0x00040006,0x0000000d,0x00000000,0x006f6276,0x00040006,0x0000000d,
        0x00000001,0x006f6269,0x00060006,0x0000000d,0x00000002,0x74786574,0x49657275,0x00000064,
        0x00040005,0x0000000e,0x74726556,0x00007865,0x00040006,0x0000000e,0x00000000,0x00000078,
        0x00040006,0x0000000e,0x00000001,0x00000079,0x00040006,0x0000000e,0x00000002,0x00000075,
        0x00040006,0x0000000e,0x00000003,0x00000076,0x00050006,0x0000000e,0x00000004,0x6f6c6f63,
        0x00000072,0x00060005,0x00000010,0x74726556,0x75427865,0x72656666,0x00000000,0x00050006,
        0x00000010,0x00000000,0x61746164,0x00000000,0x00050005,0x00000013,0x65646e49,0x66754278,
        0x00726566,0x00050006,0x00000013,0x00000000,0x61746164,0x00000000,0x00030005,0x00000015,
        0x00000000,0x00060005,0x00000020,0x565f6c67,0x65747265,0x646e4978,0x00007865,0x00060005,
        0x00000026,0x425f6c67,0x49657361,0x6174736e,0x0065636e,0x00060005,0x0000003f,0x505f6c67,
        0x65567265,0x78657472,0x00000000,0x00060006,0x0000003f,0x00000000,0x505f6c67,0x7469736f,
        0x006e6f69,0x00070006,0x0000003f,0x00000001,0x505f6c67,0x746e696f,0x657a6953,0x00000000,
        0x00070006,0x0000003f,0x00000002,0x435f6c67,0x4470696c,0x61747369,0x0065636e,0x00070006,
        0x0000003f,0x00000003,0x435f6c67,0x446c6c75,0x61747369,0x0065636e,0x00030005,0x00000041,
        0x00000000,0x00040005,0x00000044,0x6c616373,0x00005865,0x00040005,0x0000004a,0x6c616373,
        0x00005965,0x00050005,0x00000051,0x4374756f,0x726f6c6f,0x00000000,0x00040005,0x00000057,
        0x5574756f,0x00000056,0x00060005,0x0000005e,0x5474756f,0x75747865,0x64496572,0x00000000,
        0x00050048,0x0000000d,0x00000000,0x00000023,0x00000000,0x00050048,0x0000000d,0x00000001,
        0x00000023,0x00000008,0x00050048,0x0000000d,0x00000002,0x00000023,0x00000010,0x00030047,
        0x0000000d,0x00000002,0x00050048,0x0000000e,0x00000000,0x00000023,0x00000000,0x00050048,
        0x0000000e,0x00000001,0x00000023,0x00000004,0x00050048,0x0000000e,0x00000002,0x00000023,
        0x00000008,0x00050048,0x0000000e,0x00000003,0x00000023,0x0000000c,0x00050048,0x0000000e,
        0x00000004,0x00000023,0x00000010,0x00040047,0x0000000f,0x00000006,0x00000014,0x00040048,
        0x00000010,0x00000000,0x00000013,0x00040048,0x00000010,0x00000000,0x00000018,0x00050048,
        0x00000010,0x00000000,0x00000023,0x00000000,0x00030047,0x00000010,0x00000002,0x00040047,
        0x00000012,0x00000006,0x00000002,0x00040048,0x00000013,0x00000000,0x00000013,0x00040048,
        0x00000013,0x00000000,0x00000018,0x00050048,0x00000013,0x00000000,0x00000023,0x00000000,
        0x00030047,0x00000013,0x00000002,0x00040047,0x00000020,0x0000000b,0x0000002a,0x00040047,
        0x00000026,0x0000000b,0x00001149,0x00050048,0x0000003f,0x00000000,0x0000000b,0x00000000,
        0x00050048,0x0000003f,0x00000001,0x0000000b,0x00000001,0x00050048,0x0000003f,0x00000002,
        0x0000000b,0x00000003,0x00050048,0x0000003f,0x00000003,0x0000000b,0x00000004,0x00030047,
        0x0000003f,0x00000002,0x00040047,0x00000044,0x00000001,0x00000000,0x00040047,0x0000004a,
        0x00000001,0x00000001,0x00040047,0x00000051,0x0000001e,0x00000000,0x00040047,0x00000057,
        0x0000001e,0x00000001,0x00030047,0x0000005e,0x0000000e,0x00040047,0x0000005e,0x0000001e,
        0x00000002,0x00020013,0x00000002,0x00030021,0x00000003,0x00000002,0x00030016,0x00000006,
        0x00000020,0x00040015,0x00000007,0x00000020,0x00000000,0x0007001e,0x00000008,0x00000006,
        0x00000006,0x00000006,0x00000006,0x00000007,0x00040020,0x00000009,0x00000007,0x00000008,
        0x00030027,0x0000000b,0x000014e5,0x00030027,0x0000000c,0x000014e5,0x0005001e,0x0000000d,
        0x0000000b,0x0000000c,0x00000007,0x0007001e,0x0000000e,0x00000006,0x00000006,0x00000006,
        0x00000006,0x00000007,0x0003001d,0x0000000f,0x0000000e,0x0003001e,0x00000010,0x0000000f,
        0x00040020,0x0000000b,0x000014e5,0x00000010,0x00040015,0x00000011,0x00000010,0x00000000,
        0x0003001d,0x00000012,0x00000011,0x0003001e,0x00000013,0x00000012,0x00040020,0x0000000c,
        0x000014e5,0x00000013,0x00040020,0x00000014,0x00000009,0x0000000d,0x0004003b,0x00000014,
        0x00000015,0x00000009,0x00040015,0x00000016,0x00000020,0x00000001,0x0004002b,0x00000016,
        0x00000017,0x00000000,0x00040020,0x00000018,0x00000009,0x0000000b,0x0004002b,0x00000016,
        0x0000001b,0x00000001,0x00040020,0x0000001c,0x00000009,0x0000000c,0x00040020,0x0000001f,
        0x00000001,0x00000016,0x0004003b,0x0000001f,0x00000020,0x00000001,0x00040020,0x00000022,
        0x000014e5,0x00000011,0x0004003b,0x0000001f,0x00000026,0x00000001,0x00040020,0x0000002a,
        0x000014e5,0x0000000e,0x00040020,0x0000002e,0x00000007,0x00000006,0x0004002b,0x00000016,
        0x00000033,0x00000002,0x0004002b,0x00000016,0x00000036,0x00000003,0x0004002b,0x00000016,
        0x00000039,0x00000004,0x00040020,0x0000003a,0x00000007,0x00000007,0x00040017,0x0000003c,
        0x00000006,0x00000004,0x0004002b,0x00000007,0x0000003d,0x00000001,0x0004001c,0x0000003e,
        0x00000006,0x0000003d,0x0006001e,0x0000003f,0x0000003c,0x00000006,0x0000003e,0x0000003e,
        0x00040020,0x00000040,0x00000003,0x0000003f,0x0004003b,0x00000040,0x00000041,0x00000003,
        0x00040032,0x00000006,0x00000044,0x00000000,0x0004002b,0x00000006,0x00000046,0x3f800000,
        0x00040032,0x00000006,0x0000004a,0x00000000,0x0004002b,0x00000006,0x0000004d,0x00000000,
        0x00040020,0x0000004f,0x00000003,0x0000003c,0x0004003b,0x0000004f,0x00000051,0x00000003,
        0x00040017,0x00000055,0x00000006,0x00000002,0x00040020,0x00000056,0x00000003,0x00000055,
        0x0004003b,0x00000056,0x00000057,0x00000003,0x00040020,0x0000005d,0x00000003,0x00000007,
        0x0004003b,0x0000005d,0x0000005e,0x00000003,0x00040020,0x0000005f,0x00000009,0x00000007,
        0x00050036,0x00000002,0x00000004,0x00000000,0x00000003,0x000200f8,0x00000005,0x0004003b,
        0x00000009,0x0000000a,0x00000007,0x00050041,0x00000018,0x00000019,0x00000015,0x00000017,
        0x0004003d,0x0000000b,0x0000001a,0x00000019,0x00050041,0x0000001c,0x0000001d,0x00000015,
        0x0000001b,0x0004003d,0x0000000c,0x0000001e,0x0000001d,0x0004003d,0x00000016,0x00000021,
        0x00000020,0x00060041,0x00000022,0x00000023,0x0000001e,0x00000017,0x00000021,0x0006003d,
        0x00000011,0x00000024,0x00000023,0x00000002,0x00000002,0x00040071,0x00000007,0x00000025,
        0x00000024,0x0004003d,0x00000016,0x00000027,0x00000026,0x0004007c,0x00000007,0x00000028,
        0x00000027,0x00050080,0x00000007,0x00000029,0x00000025,0x00000028,0x00060041,0x0000002a,
        0x0000002b,0x0000001a,0x00000017,0x00000029,0x0006003d,0x0000000e,0x0000002c,0x0000002b,
        0x00000002,0x00000004,0x00050051,0x00000006,0x0000002d,0x0000002c,0x00000000,0x00050041,
        0x0000002e,0x0000002f,0x0000000a,0x00000017,0x0003003e,0x0000002f,0x0000002d,0x00050051,
        0x00000006,0x00000030,0x0000002c,0x00000001,0x00050041,0x0000002e,0x00000031,0x0000000a,
        0x0000001b,0x0003003e,0x00000031,0x00000030,0x00050051,0x00000006,0x00000032,0x0000002c,
        0x00000002,0x00050041,0x0000002e,0x00000034,0x0000000a,0x00000033,0x0003003e,0x00000034,
        0x00000032,0x00050051,0x00000006,0x00000035,0x0000002c,0x00000003,0x00050041,0x0000002e,
        0x00000037,0x0000000a,0x00000036,0x0003003e,0x00000037,0x00000035,0x00050051,0x00000007,
        0x00000038,0x0000002c,0x00000004,0x00050041,0x0000003a,0x0000003b,0x0000000a,0x00000039,
        0x0003003e,0x0000003b,0x00000038,0x00050041,0x0000002e,0x00000042,0x0000000a,0x00000017,
        0x0004003d,0x00000006,0x00000043,0x00000042,0x00050085,0x00000006,0x00000045,0x00000043,
        0x00000044,0x00050083,0x00000006,0x00000047,0x00000045,0x00000046,0x00050041,0x0000002e,
        0x00000048,0x0000000a,0x0000001b,0x0004003d,0x00000006,0x00000049,0x00000048,0x00050085,
        0x00000006,0x0000004b,0x00000049,0x0000004a,0x00050081,0x00000006,0x0000004c,0x0000004b,
        0x00000046,0x00070050,0x0000003c,0x0000004e,0x00000047,0x0000004c,0x0000004d,0x00000046,
        0x00050041,0x0000004f,0x00000050,0x00000041,0x00000017,0x0003003e,0x00000050,0x0000004e,
        0x00050041,0x0000003a,0x00000052,0x0000000a,0x00000039,0x0004003d,0x00000007,0x00000053,
        0x00000052,0x0006000c,0x0000003c,0x00000054,0x00000001,0x00000040,0x00000053,0x0003003e,
        0x00000051,0x00000054,0x00050041,0x0000002e,0x00000058,0x0000000a,0x00000033,0x0004003d,
        0x00000006,0x00000059,0x00000058,0x00050041,0x0000002e,0x0000005a,0x0000000a,0x00000036,
        0x0004003d,0x00000006,0x0000005b,0x0000005a,0x00050050,0x00000055,0x0000005c,0x00000059,
        0x0000005b,0x0003003e,0x00000057,0x0000005c,0x00050041,0x0000005f,0x00000060,0x00000015,
        0x00000033,0x0004003d,0x00000007,0x00000061,0x00000060,0x0003003e,0x0000005e,0x00000061,
        0x000100fd,0x00010038
    };

    /*
        #version 460
        #extension GL_EXT_nonuniform_qualifier : require

        layout(location = 0) in vec4 fragColor;
        layout(location = 1) in vec2 fragUV;
        layout(location = 2) in flat uint fragTextureId;

        layout(location = 0) out vec4 outColor;

        layout(binding = 0) uniform sampler samplers[];
        layout(binding = 1) uniform texture2D textures[];

        void main()
        {
            outColor = fragColor * texture(sampler2D(textures[fragTextureId], samplers[0]), fragUV);
        }
    */

    u32 constexpr fragCode[] = {
        0x07230203,0x00010000,0x0008000b,0x0000002a,0x00000000,0x00020011,0x00000001,0x00020011,
        0x000014b6,0x0008000a,0x5f565053,0x5f545845,0x63736564,0x74706972,0x695f726f,0x7865646e,
        0x00676e69,0x0006000b,0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,
        0x00000000,0x00000001,0x0009000f,0x00000004,0x00000004,0x6e69616d,0x00000000,0x00000009,
        0x0000000b,0x00000013,0x00000026,0x00030010,0x00000004,0x00000007,0x00030003,0x00000002,
        0x000001cc,0x00080004,0x455f4c47,0x6e5f5458,0x6e756e6f,0x726f6669,0x75715f6d,0x66696c61,
        0x00726569,0x00040005,0x00000004,0x6e69616d,0x00000000,0x00050005,0x00000009,0x4374756f,
        0x726f6c6f,0x00000000,0x00050005,0x0000000b,0x67617266,0x6f6c6f43,0x00000072,0x00050005,
        0x00000010,0x74786574,0x73657275,0x00000000,0x00060005,0x00000013,0x67617266,0x74786554,
        0x49657275,0x00000064,0x00050005,0x0000001c,0x706d6173,0x7372656c,0x00000000,0x00040005,
        0x00000026,0x67617266,0x00005655,0x00040047,0x00000009,0x0000001e,0x00000000,0x00040047,
        0x0000000b,0x0000001e,0x00000000,0x00040047,0x00000010,0x00000022,0x00000000,0x00040047,
        0x00000010,0x00000021,0x00000001,0x00030047,0x00000013,0x0000000e,0x00040047,0x00000013,
        0x0000001e,0x00000002,0x00040047,0x0000001c,0x00000022,0x00000000,0x00040047,0x0000001c,
        0x00000021,0x00000000,0x00040047,0x00000026,0x0000001e,0x00000001,0x00020013,0x00000002,
        0x00030021,0x00000003,0x00000002,0x00030016,0x00000006,0x00000020,0x00040017,0x00000007,
        0x00000006,0x00000004,0x00040020,0x00000008,0x00000003,0x00000007,0x0004003b,0x00000008,
        0x00000009,0x00000003,0x00040020,0x0000000a,0x00000001,0x00000007,0x0004003b,0x0000000a,
        0x0000000b,0x00000001,0x00090019,0x0000000d,0x00000006,0x00000001,0x00000000,0x00000000,
        0x00000000,0x00000001,0x00000000,0x0003001d,0x0000000e,0x0000000d,0x00040020,0x0000000f,
        0x00000000,0x0000000e,0x0004003b,0x0000000f,0x00000010,0x00000000,0x00040015,0x00000011,
        0x00000020,0x00000000,0x00040020,0x00000012,0x00000001,0x00000011,0x0004003b,0x00000012,
        0x00000013,0x00000001,0x00040020,0x00000015,0x00000000,0x0000000d,0x0002001a,0x00000018,
        0x0004002b,0x00000011,0x00000019,0x00000001,0x0004001c,0x0000001a,0x00000018,0x00000019,
        0x00040020,0x0000001b,0x00000000,0x0000001a,0x0004003b,0x0000001b,0x0000001c,0x00000000,
        0x00040015,0x0000001d,0x00000020,0x00000001,0x0004002b,0x0000001d,0x0000001e,0x00000000,
        0x00040020,0x0000001f,0x00000000,0x00000018,0x0003001b,0x00000022,0x0000000d,0x00040017,
        0x00000024,0x00000006,0x00000002,0x00040020,0x00000025,0x00000001,0x00000024,0x0004003b,
        0x00000025,0x00000026,0x00000001,0x00050036,0x00000002,0x00000004,0x00000000,0x00000003,
        0x000200f8,0x00000005,0x0004003d,0x00000007,0x0000000c,0x0000000b,0x0004003d,0x00000011,
        0x00000014,0x00000013,0x00050041,0x00000015,0x00000016,0x00000010,0x00000014,0x0004003d,
        0x0000000d,0x00000017,0x00000016,0x00050041,0x0000001f,0x00000020,0x0000001c,0x0000001e,
        0x0004003d,0x00000018,0x00000021,0x00000020,0x00050056,0x00000022,0x00000023,0x00000017,
        0x00000021,0x0004003d,0x00000024,0x00000027,0x00000026,0x00050057,0x00000007,0x00000028,
        0x00000023,0x00000027,0x00050085,0x00000007,0x00000029,0x0000000c,0x00000028,0x0003003e,
        0x00000009,0x00000029,0x000100fd,0x00010038
    };

    f32 const scale[] = {
         2.f / static_cast<f32>(VkContext::Get()->swapchainExtent.width), 
        -2.f / static_cast<f32>(VkContext::Get()->swapchainExtent.height)
    };

    m.pipeline = GraphicsPipeline{ GraphicsPipeline::Config{
        .shaders = {
            Shader{ fragCode, sizeof(fragCode), ShaderStage::eFragment },
            Shader{ vertCode, sizeof(vertCode), ShaderStage::eVertex, SpecializationInfo{
                .pData = scale,
                .dataSize = sizeof(scale),
                .entries = {
                    EntryInfo{
                        .id = 0,
                        .offset = 0,
                        .size = sizeof(f32),
                    },
                    EntryInfo{
                        .id = 1,
                        .offset = sizeof(f32),
                        .size = sizeof(f32)
                    }
                }
            }}
        },
        .flags = GraphicsPipeline::FlagBits::eColorBlending
    }};
}
